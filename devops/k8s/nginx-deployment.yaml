apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: social-media
  labels:
    app: nginx
    component: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
      component: frontend
  template:
    metadata:
      labels:
        app: nginx
        component: frontend
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: static-files
          mountPath: /var/www/static
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: static-files
        persistentVolumeClaim:
          claimName: social-media-static-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: social-media
  labels:
    app: nginx
    component: frontend
spec:
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: nginx
    component: frontend
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: social-media
  labels:
    app: nginx
    component: frontend
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        
        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;
        
        # Upstream for Django application
        upstream django_backend {
            server social-media-app:8000;
        }
        
        # Main server block
        server {
            listen 80 default_server;
            server_name _;
            
            # Security headers
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            
            # Static files
            location /static/ {
                alias /var/www/static/;
                expires 1y;
                add_header Cache-Control "public, immutable";
                access_log off;
            }
            
            # Media files (proxy to Django)
            location /media/ {
                proxy_pass http://django_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            # Django application
            location / {
                proxy_pass http://django_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Forwarded-Host $server_name;
                
                # Timeouts
                proxy_connect_timeout 60s;
                proxy_send_timeout 60s;
                proxy_read_timeout 60s;
                
                # Buffer settings
                proxy_buffering on;
                proxy_buffer_size 4k;
                proxy_buffers 8 4k;
            }
            
            # Health check endpoint
            location /health/ {
                proxy_pass http://django_backend/health/;
                access_log off;
            }
        }
    }
